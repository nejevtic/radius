server vpn {

  listen {
    type = auth
    ipaddr = *
    port = {{ radius_vpn_port_auth }}
    limit {
      max_connections = 16
      lifetime = 0
      idle_timeout = 30
    }
  }

  listen {
    type = acct
    ipaddr = *
    port = {{ radius_vpn_port_acct }}
    limit {
    }
  }

  listen {
    type = auth
    ipv6addr = :: # any.  ::1 == localhost
    port = {{ radius_vpn_port_auth }}
    limit {
      max_connections = 16
      lifetime = 0
      idle_timeout = 30
    }
  }

  listen {
    type = acct
    ipv6addr = ::
    port = {{ radius_vpn_port_acct }}
    limit {
    }
  }

  authorize {
    if (!State) {
      filter_username
      preprocess
      suffix
      files
      -ldap
      if ((ok || updated)) {
        update {
          control:Auth-Type := Kerberos
        }
      }
      expiration
      logintime
    }
    else {
      update control {
        Auth-Type := OTP
      }
    }
  }

  authenticate {
    Auth-Type Kerberos {
      krb5
      if (ok) {
        update reply {
          # Create a random State attribute:
          State := "%{randstr:aaaaa}"
          Reply-Message := "Please enter OTP"
        }
        # Return Access-Challenge:
        challenge
      }
    }
    Auth-Type OTP {
      multiotp
    }
  }

  preacct {
    preprocess
    acct_unique
    suffix
    files
  }

  accounting {
    detail
    unix
    exec
    attr_filter.accounting_response
  }

  session {
  }

  post-auth {
    update {
      &reply: += &session-state:
    }
{% for vlan in radius_vpn_vlans %}
    {% if not loop.first %}els{% endif %}if (LDAP-Group == "cn={{ vlan.group }},cn=groups,cn=accounts,{{ network_domain_name | hostname_to_dn }}") {
      update reply {
        Fortinet-Group-Name = {{ vlan.group }}
        Tunnel-Type = VLAN
        Tunnel-Medium-Type = IEEE-802
{% if vlan.id is defined %}
        Tunnel-Private-Group-Id = {{ vlan.id }}
{% endif %}
{% if vlan.group == "trusted-infra" %}
        Service-Type = Administrative-User
        Fortinet-Access-Profile = super_admin
        Cisco-AVPair = "shell:priv-lvl=15"
        Juniper-Local-User-Name = "super-users"
{% endif %}
{% if vlan.group == "infra" %}
        Service-Type = Administrative-User
        Fortinet-Access-Profile = readonly
        Cisco-AVPair = "shell:priv-lvl=4"
        Juniper-Local-User-Name = "readonly-users"
{% endif %}
      }
    }
{% endfor %}
    else {
    # external
      update reply {
        Reply-Message := "You are not allowed to access"
      }
      reject
    }
    exec
    remove_reply_message_if_eap
    Post-Auth-Type REJECT {
      attr_filter.access_reject
      eap
      remove_reply_message_if_eap
    }
  }

  pre-proxy {
  }

  post-proxy {
    eap
  }
}

